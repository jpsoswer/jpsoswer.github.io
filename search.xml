<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>用hexo+github搭建个人博客</title>
    <url>/2025/06/09/%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>​	自己淋过雨就要为别人打伞，我也是才学会搭建个人博客之前看了很多视频，查了很多资料感觉总是差那么一点意思，在搭建的过程<br>中，自己也吃过很多亏，经过多次尝试，一路摸爬滚打过来才终于建起了自己的第一个个人博客；<br>​	以下的内容希望会给大家带来帮助：</p>
<h3 id="第一步配置仓库-github"><a href="#第一步配置仓库-github" class="headerlink" title="第一步配置仓库 github"></a><strong>第一步配置仓库</strong> <a href="https://link.zhihu.com/?target=https://github.com/">github</a></h3><h4 id="注册github账号"><a href="#注册github账号" class="headerlink" title="注册github账号"></a>注册github账号</h4><img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\屏幕截图 2025-06-09 105756.png" alt="屏幕截图 2025-06-09 105756" style="zoom:80%;" />

<h4 id="创建仓库-github-io"><a href="#创建仓库-github-io" class="headerlink" title="创建仓库 .github&#x2F;io"></a>创建仓库 <a href="https://github.com/">.github&#x2F;io</a></h4><p>首先在 GitHub 新建一个仓库（Repository），名称为 {username}.github.io，注意这个名比较特殊，必须要是 <a href="https://link.zhihu.com/?target=http://github.io">http://github.io</a> 为后缀结尾的。比如 GitHub 用户名就叫 ColorMali，那我就新建一个 ColorMal.github.io，新建完成之后就可以进行后续操作了。</p>
<p>另外如果 GitHub 没有配置 SSH 连接的建议配置一下，这样后面在部署博客的时候会更方便(ssh配置我放到了后面)。</p>
<img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-31dfe08f93569a84e3c315fa5d77c143_r.jpg" alt="v2-31dfe08f93569a84e3c315fa5d77c143_r" style="zoom: 80%;" />

<p>具体可参考上图进行配置</p>
<h3 id="第二步环境准备"><a href="#第二步环境准备" class="headerlink" title="第二步环境准备"></a><strong>第二步环境准备</strong></h3><h3 id="Git官方网站：Git下载"><a href="#Git官方网站：Git下载" class="headerlink" title="Git官方网站：Git下载"></a>Git官方网站：<a href="https://link.zhihu.com/?target=https://git-scm.com/download/win">Git下载</a></h3><p>![屏幕截图 2025-06-09 144115](E:\ziliao\图片\素材\博客素材\屏幕截图 2025-06-09 144115.png)</p>
<p>选择这个</p>
<h3 id="Node-js官方网站：Node-js下载"><a href="#Node-js官方网站：Node-js下载" class="headerlink" title="Node.js官方网站：Node.js下载"></a>Node.js官方网站：<a href="https://link.zhihu.com/?target=https://nodejs.org/en/download/">Node.js下载</a></h3><p>![屏幕截图 2025-06-09 144519](E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\屏幕截图 2025-06-09 144519.png)</p>
<h4 id="下面是关于环境配置的"><a href="#下面是关于环境配置的" class="headerlink" title="下面是关于环境配置的"></a>下面是关于环境配置的</h4><p><img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-82aab74e58f54c4471e70f5c4358b472_r.jpg" alt="v2-82aab74e58f54c4471e70f5c4358b472_r"></p>
<p>配置完成后分别进行以下测试判断是否安装成功：</p>
<p><strong>Nodejs</strong> –&gt; 在<strong>Windows Powershell</strong>中输入命令：<code>node -v</code> ，出现版本号则证明安装成功</p>
<p><strong>Git</strong> –&gt; 在<strong>Windows Powershell</strong>中输入命令：<code>git version</code> ，出现版本号则证明安装成功</p>
<p>![屏幕截图 2025-06-09 145533](E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\屏幕截图 2025-06-09 145533.png)</p>
<h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><p>打开<strong>git-bash</strong>输入安装命令：<code>npm install hexo -g</code></p>
<p>运行结束后输入测试输入命令：<code>hexo -v</code> 验证是否安装成功</p>
<p><img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-1bbda550c8b46d2e7397900fd3858802_r.jpg" alt="v2-1bbda550c8b46d2e7397900fd3858802_r"></p>
<h4 id="安装Hexo依赖"><a href="#安装Hexo依赖" class="headerlink" title="安装Hexo依赖"></a>安装Hexo依赖</h4><p>打开<strong>git-bash</strong>输入安装命令：<code>npm install --save hexo-deployer-git</code></p>
<p><img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-17878c91955f1de7e5a7d6b568cb6246_r.jpg" alt="v2-17878c91955f1de7e5a7d6b568cb6246_r"></p>
<h3 id="第四步git配置SSH-key"><a href="#第四步git配置SSH-key" class="headerlink" title="第四步git配置SSH key"></a><strong>第四步git配置<a href="https://zhida.zhihu.com/search?content_id=505260193&content_type=Answer&match_order=1&q=SSH+key&zhida_source=entity">SSH key</a></strong></h3><blockquote>
<p>为什么要配置SSH key？<br>目的：可以免密的将本地的源码和资源上传到github，无需要每次都输账号和密码。</p>
</blockquote>
<h3 id="命令生成"><a href="#命令生成" class="headerlink" title="命令生成"></a>命令生成</h3><p>打开<strong>git-bash</strong>输入安装命令：<code>ssh-keygen -t rsa -C</code></p>
<p>输入生成命令：<code>ssh-keygen -t rsa -C &quot;zhangyumao@petalmail.com&quot;</code>(最好写自己github绑定的那个邮箱) 后；连续按<strong>Enter</strong>三次即可；</p>
<p>检查本地是否有配置好SSH key 输入命令：<code>cd ~/.ssh</code></p>
<p><img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-b57eff7645be2dfa7b627a408bdb008a_r.png" alt="v2-b57eff7645be2dfa7b627a408bdb008a_r"></p>
<h3 id="命令安装"><a href="#命令安装" class="headerlink" title="命令安装"></a>命令安装</h3><p>可以看到在用户文件夹下生成了一个<strong>ssh</strong>文件夹</p>
<p><img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-2741fad06c800a0b09a9dd8699913ae4_r.jpg" alt="v2-2741fad06c800a0b09a9dd8699913ae4_r"></p>
<p>进入到<strong>ssh</strong>文件夹，复制<strong>id_rsa.pub</strong>文件里全部内容</p>
<p><img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-784d384869472703ae4895296b3ef47a_r.jpg" alt="v2-784d384869472703ae4895296b3ef47a_r"></p>
<p>接着打开github个人主页点击&lt;<strong>a href&#x3D;”**<a href="https://link.zhihu.com/?target=https://github.com/">https://github.com/</a>“&gt; Settings，打开个人设置，点击左侧的 <strong>SSH and GPG keys</strong>，点击新建</strong>New SSH key**，完成后点击 <strong>Add SSH key</strong></p>
<p><img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-3e2ddd279c52a342bcec614e4d61ffe6_r.jpg" alt="v2-3e2ddd279c52a342bcec614e4d61ffe6_r"></p>
<p>点击 <strong>Add SSH key</strong>提交后测试是否成功，输入命令：<code>ssh -T git@github.com</code> 如图所示表示成功：</p>
<p><img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-f6cfe449bae01b1bfbdbf059b1f7d676_r.png" alt="v2-f6cfe449bae01b1bfbdbf059b1f7d676_r"></p>
<h3 id="设置git用户名和邮箱"><a href="#设置git用户名和邮箱" class="headerlink" title="设置git用户名和邮箱"></a>设置git用户名和邮箱</h3><p>如果没有初始化过用户名和邮箱，需要用<strong>命令提示符</strong>设置一下用户名和邮箱。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;ColorMao&quot;` `git config --global user.email &quot;zhangyumao@petalmail.com&quot;</span><br></pre></td></tr></table></figure>

<p><img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-49be284e3f7cbafc098dcb25681d5f16_r.png" alt="v2-49be284e3f7cbafc098dcb25681d5f16_r"></p>
<p>邮箱地址最好是真实有效的，而且最好是GitHub或者gitee的注册邮箱。</p>
<h3 id="查看git用户名和密码"><a href="#查看git用户名和密码" class="headerlink" title="查看git用户名和密码"></a>查看git用户名和密码</h3><p>查看用户名 ：<code>git config user.name</code></p>
<p>查看密码： <code>git config user.password</code></p>
<p>查看邮箱：<code>git config user.email</code></p>
<p>查看配置信息：<code>git config --list</code></p>
<p>修改用户名和密码：<code>git config --global user.name &quot;xxxx(新的用户名)&quot;</code></p>
<p>修改密码：<code>git config --global user.password &quot;xxxx(新的密码)&quot;</code></p>
<p>修改邮箱：<code>git config --global user.email &quot;xxxx@xxx.com(新的邮箱)&quot;</code></p>
<h3 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h3><p>配置完成后使用命令查看全局配置，输入命令： <code>git config --list</code></p>
<img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-ca5713cb5bf9d2b66e1b16d16f1c5e5a_r.jpg" alt="v2-ca5713cb5bf9d2b66e1b16d16f1c5e5a_r" style="zoom:150%;" />



<h3 id="第五步搭建个人博客"><a href="#第五步搭建个人博客" class="headerlink" title="第五步搭建个人博客"></a><strong>第五步搭建个人博客</strong></h3><h3 id="设置本地配置"><a href="#设置本地配置" class="headerlink" title="设置本地配置"></a>设置本地配置</h3><p>创建一个本地保存博客的存放文件夹，例如：<code>D:\你的邮箱名称\Blog Space</code></p>
<p>用<strong>git</strong> 命令 进入文件夹：</p>
<ul>
<li>输入 <code>cd D:</code>切换到目录所在磁盘下；</li>
<li>输入 <code>cd ZhangYuMao</code> 再次切换到下层目录所在位置；</li>
<li>当用cd 进入文件夹时,我们可以使用通配符：**<code>\*</code>** ； 例如 <code>cd B*</code> 如果当前文件夹下只有一个B开头的文件夹,它就会进入到该文件夹；</li>
<li>继续向下切换可以输入下层文件夹名称；例如：  <code>cd 22Y08M03D*</code></li>
<li>进入到本地博客指定存放目录，输入命令：<code>hexo init</code> 开始初始化 个人博客；</li>
</ul>
<p><img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-578f1c81c4c624ebde76f0a5e9421b80_r.jpg" alt="v2-578f1c81c4c624ebde76f0a5e9421b80_r"></p>
<h3 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h3><p>使用命令 <code>hexo clean</code> 可以清除缓存，清除缓存可以让新配置的信息立即生效。</p>
<p>然后执行命令：<code>hexo generate</code> 自动根据当前目录下文件,生成静态网页；</p>
<p><img src="E:\ziliao\图片\素材\博客素材\v2-c885f0f371c99ff7158fe49eb561d2f8_r.jpg" alt="v2-c885f0f371c99ff7158fe49eb561d2f8_r"></p>
<p>然后执行命令：<code>hexo server</code> 部署到本地服务器预览；注：Ctrl+C 可结束运行。</p>
<p><img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-5f43dbb89ca96304562dba42b003cb17_r.png" alt="v2-5f43dbb89ca96304562dba42b003cb17_r"></p>
<p>这时在浏览器输入： <a href="https://link.zhihu.com/?target=http://localhost:4000/">http://localhost:4000/</a> 就可以看到如下效果：</p>
<p><img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-081a2b9faa294bc19fe291a7ea0ec0d7_r.jpg" alt="v2-081a2b9faa294bc19fe291a7ea0ec0d7_r"></p>
<h3 id="相关插件安装"><a href="#相关插件安装" class="headerlink" title="相关插件安装"></a>相关插件安装</h3><p>插件查询安装地址：<a href="https://link.zhihu.com/?target=https://hexo.io/plugins/">Hexo</a></p>
<p>需要安装的插件名称，输入命令： <code>npm install hexo-bridge</code></p>
<p>例如安装 <a href="https://link.zhihu.com/?target=https://github.com/DeepSpaceHarbor/hexo-bridge">hexo-bridge</a> 如下图表示成功</p>
<p><img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-16bfd295c43e3109ad1bfe4c1af19da9_r.jpg" alt="v2-16bfd295c43e3109ad1bfe4c1af19da9_r"></p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>现在来介绍常用的Hexo 命令</p>
<p>npm install hexo -g #安装Hexo<br>npm update hexo -g #升级<br>hexo init #初始化博客</p>
<p>命令简写<br>hexo n “我的博客” &#x3D;&#x3D; hexo new “我的博客” #新建文章<br>hexo g &#x3D;&#x3D; hexo generate #生成<br>hexo s &#x3D;&#x3D; hexo server #启动服务预览<br>hexo d &#x3D;&#x3D; hexo deploy #部署</p>
<p>hexo server #Hexo会监视文件变动并自动更新，无须重启服务器<br>hexo server -s #静态模式<br>hexo server -p 5000 #更改端口<br>hexo server -i 192.168.1.1 #自定义 IP<br>hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</p>
<p>刚刚的三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作。</p>
<p><strong>推送网站</strong></p>
<p>上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为<strong>站点</strong>配置文件，如下图</p>
<p><img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-cb1fd5e5a2e73f513234e434724c7c55_r.jpg" alt="v2-cb1fd5e5a2e73f513234e434724c7c55_r"></p>
<p>进入根目录里的themes文件夹，里面也有个_config.yml文件，这个称为<strong>主题</strong>配置文件，如下图</p>
<p><img src="E:\myhtml\firsthtml\2687255690\themes\next\source\images\bokephoto\oneboke\v2-4252029e5634bf91c7d58916ae2b8ac3_r.jpg" alt="v2-4252029e5634bf91c7d58916ae2b8ac3_r"></p>
<p>下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为：</p>
<p>deploy:<br>type: git<br>repo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .git<br>branch: main参考如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:ColorMao/ColorMao.github.io.git          //你自己的项目路径</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>

<p>保存站点配置文件。</p>
<p>其实就是给hexo d 这个命令做相应的配置，让hexo知道你要把blog部署在哪个位置，很显然，我们部署在我们GitHub的仓库里。最后安装Git部署插件，输入命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>



<p>这时，我们分别输入三条命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>其实第三条的 hexo d 就是部署网站命令，d是deploy的缩写。完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 “你的用户名”.github.io</p>
<h3 id="创建加速站点"><a href="#创建加速站点" class="headerlink" title="创建加速站点"></a>创建加速站点</h3><p>可跟这个视频做</p>
<p><a href="https://www.bilibili.com/video/BV1nY6xYmEw7/?spm_id_from=333.1387.favlist.content.click&vd_source=c4562b5d46cb388aecdd8fddaaa6c525">免费搭建个人博客，2025最新，保姆级教程！无服务器、零代码、国内+国外网络流畅访问！「Cloudflare + GitHub + Hexo」_哔哩哔哩_bilibili</a></p>
<h3 id="个性化"><a href="#个性化" class="headerlink" title="个性化"></a>个性化</h3><p>如果想换皮肤可以访问Hexo的官网<a href="https://hexo.io/zh-cn/">Hexo</a></p>
<p>修改博客的结构可以看这个视频</p>
<p>[<a href="https://www.bilibili.com/video/BV16W411t7mq/?spm_id_from=333.337.search-card.all.click&vd_source=c4562b5d46cb388aecdd8fddaaa6c525">馨客栈分享]使用Hexo博客搭建的个人博客，使用Next主题来进行优化改造_哔哩哔哩_bilibili</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2025/04/17/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
